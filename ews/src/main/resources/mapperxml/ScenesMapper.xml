<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.huifer.ews.mapper.ScenesMapper">
	<resultMap id="BaseResultMap" type="com.github.huifer.ews.domain.db.Scenes">
		<!--@mbg.generated-->
		<!--@Table scenes-->
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="name" jdbcType="VARCHAR" property="name"/>
		<result column="example_json" jdbcType="VARCHAR" property="exampleJson"/>
		<result column="description" jdbcType="VARCHAR" property="description"/>
	</resultMap>
	<sql id="Base_Column_List">
		<!--@mbg.generated-->
		id, `name`, example_json, description
	</sql>
	<update id="updateBatch" parameterType="java.util.List">
		<!--@mbg.generated-->
		update scenes
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="`name` = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
				</foreach>
			</trim>
			<trim prefix="example_json = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					when id = #{item.id,jdbcType=INTEGER} then #{item.exampleJson,jdbcType=VARCHAR}
				</foreach>
			</trim>
			<trim prefix="description = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					when id = #{item.id,jdbcType=INTEGER} then #{item.description,jdbcType=VARCHAR}
				</foreach>
			</trim>
		</trim>
		where id in
		<foreach close=")" collection="list" item="item" open="(" separator=", ">
			#{item.id,jdbcType=INTEGER}
		</foreach>
	</update>
	<update id="updateBatchSelective" parameterType="java.util.List">
		<!--@mbg.generated-->
		update scenes
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="`name` = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					<if test="item.name != null">
						when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
					</if>
				</foreach>
			</trim>
			<trim prefix="example_json = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					<if test="item.exampleJson != null">
						when id = #{item.id,jdbcType=INTEGER} then #{item.exampleJson,jdbcType=VARCHAR}
					</if>
				</foreach>
			</trim>
			<trim prefix="description = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					<if test="item.description != null">
						when id = #{item.id,jdbcType=INTEGER} then #{item.description,jdbcType=VARCHAR}
					</if>
				</foreach>
			</trim>
		</trim>
		where id in
		<foreach close=")" collection="list" item="item" open="(" separator=", ">
			#{item.id,jdbcType=INTEGER}
		</foreach>
	</update>
	<insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
		<!--@mbg.generated-->
		insert into scenes
		(`name`, example_json, description)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.name,jdbcType=VARCHAR}, #{item.exampleJson,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.github.huifer.ews.domain.db.Scenes"
			useGeneratedKeys="true">
		<!--@mbg.generated-->
		insert into scenes
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			`name`,
			example_json,
			description,
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			#{name,jdbcType=VARCHAR},
			#{exampleJson,jdbcType=VARCHAR},
			#{description,jdbcType=VARCHAR},
		</trim>
		on duplicate key update
		<trim suffixOverrides=",">
			<if test="id != null">
				id = #{id,jdbcType=INTEGER},
			</if>
			`name` = #{name,jdbcType=VARCHAR},
			example_json = #{exampleJson,jdbcType=VARCHAR},
			description = #{description,jdbcType=VARCHAR},
		</trim>
	</insert>
	<insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
			parameterType="com.github.huifer.ews.domain.db.Scenes" useGeneratedKeys="true">
		<!--@mbg.generated-->
		insert into scenes
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				`name`,
			</if>
			<if test="exampleJson != null">
				example_json,
			</if>
			<if test="description != null">
				description,
			</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="exampleJson != null">
				#{exampleJson,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
		</trim>
		on duplicate key update
		<trim suffixOverrides=",">
			<if test="id != null">
				id = #{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
			<if test="exampleJson != null">
				example_json = #{exampleJson,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
</mapper>