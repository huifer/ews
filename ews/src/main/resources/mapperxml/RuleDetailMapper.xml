<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.huifer.ews.mapper.RuleDetailMapper">
	<resultMap id="BaseResultMap" type="com.github.huifer.ews.domain.db.RuleDetail">
		<!--@mbg.generated-->
		<!--@Table rule_detail-->
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="scenes_id" jdbcType="INTEGER" property="scenesId"/>
		<result column="expression" jdbcType="VARCHAR" property="expression"/>
		<result column="comparison_value" jdbcType="VARCHAR" property="comparisonValue"/>
		<result column="operator" jdbcType="INTEGER" property="operator"/>
		<result column="name" jdbcType="VARCHAR" property="name"/>
	</resultMap>
	<sql id="Base_Column_List">
		<!--@mbg.generated-->
		id, scenes_id, expression, comparison_value, `operator`, `name`
	</sql>
	<update id="updateBatch" parameterType="java.util.List">
		<!--@mbg.generated-->
		update rule_detail
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="scenes_id = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					when id = #{item.id,jdbcType=INTEGER} then #{item.scenesId,jdbcType=INTEGER}
				</foreach>
			</trim>
			<trim prefix="expression = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					when id = #{item.id,jdbcType=INTEGER} then #{item.expression,jdbcType=VARCHAR}
				</foreach>
			</trim>
			<trim prefix="comparison_value = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					when id = #{item.id,jdbcType=INTEGER} then #{item.comparisonValue,jdbcType=VARCHAR}
				</foreach>
			</trim>
			<trim prefix="`operator` = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					when id = #{item.id,jdbcType=INTEGER} then #{item.operator,jdbcType=INTEGER}
				</foreach>
			</trim>
			<trim prefix="`name` = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
				</foreach>
			</trim>
		</trim>
		where id in
		<foreach close=")" collection="list" item="item" open="(" separator=", ">
			#{item.id,jdbcType=INTEGER}
		</foreach>
	</update>
	<update id="updateBatchSelective" parameterType="java.util.List">
		<!--@mbg.generated-->
		update rule_detail
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="scenes_id = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					<if test="item.scenesId != null">
						when id = #{item.id,jdbcType=INTEGER} then #{item.scenesId,jdbcType=INTEGER}
					</if>
				</foreach>
			</trim>
			<trim prefix="expression = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					<if test="item.expression != null">
						when id = #{item.id,jdbcType=INTEGER} then #{item.expression,jdbcType=VARCHAR}
					</if>
				</foreach>
			</trim>
			<trim prefix="comparison_value = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					<if test="item.comparisonValue != null">
						when id = #{item.id,jdbcType=INTEGER} then #{item.comparisonValue,jdbcType=VARCHAR}
					</if>
				</foreach>
			</trim>
			<trim prefix="`operator` = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					<if test="item.operator != null">
						when id = #{item.id,jdbcType=INTEGER} then #{item.operator,jdbcType=INTEGER}
					</if>
				</foreach>
			</trim>
			<trim prefix="`name` = case" suffix="end,">
				<foreach collection="list" index="index" item="item">
					<if test="item.name != null">
						when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
					</if>
				</foreach>
			</trim>
		</trim>
		where id in
		<foreach close=")" collection="list" item="item" open="(" separator=", ">
			#{item.id,jdbcType=INTEGER}
		</foreach>
	</update>
	<insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
		<!--@mbg.generated-->
		insert into rule_detail
		(scenes_id, expression, comparison_value, `operator`, `name`)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.scenesId,jdbcType=INTEGER}, #{item.expression,jdbcType=VARCHAR},
			#{item.comparisonValue,jdbcType=VARCHAR},
			#{item.operator,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR})
		</foreach>
	</insert>
	<insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
			parameterType="com.github.huifer.ews.domain.db.RuleDetail" useGeneratedKeys="true">
		<!--@mbg.generated-->
		insert into rule_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			scenes_id,
			expression,
			comparison_value,
			`operator`,
			`name`,
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			#{scenesId,jdbcType=INTEGER},
			#{expression,jdbcType=VARCHAR},
			#{comparisonValue,jdbcType=VARCHAR},
			#{operator,jdbcType=INTEGER},
			#{name,jdbcType=VARCHAR},
		</trim>
		on duplicate key update
		<trim suffixOverrides=",">
			<if test="id != null">
				id = #{id,jdbcType=INTEGER},
			</if>
			scenes_id = #{scenesId,jdbcType=INTEGER},
			expression = #{expression,jdbcType=VARCHAR},
			comparison_value = #{comparisonValue,jdbcType=VARCHAR},
			`operator` = #{operator,jdbcType=INTEGER},
			`name` = #{name,jdbcType=VARCHAR},
		</trim>
	</insert>
	<insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
			parameterType="com.github.huifer.ews.domain.db.RuleDetail" useGeneratedKeys="true">
		<!--@mbg.generated-->
		insert into rule_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="scenesId != null">
				scenes_id,
			</if>
			<if test="expression != null">
				expression,
			</if>
			<if test="comparisonValue != null">
				comparison_value,
			</if>
			<if test="operator != null">
				`operator`,
			</if>
			<if test="name != null">
				`name`,
			</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="scenesId != null">
				#{scenesId,jdbcType=INTEGER},
			</if>
			<if test="expression != null">
				#{expression,jdbcType=VARCHAR},
			</if>
			<if test="comparisonValue != null">
				#{comparisonValue,jdbcType=VARCHAR},
			</if>
			<if test="operator != null">
				#{operator,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
		</trim>
		on duplicate key update
		<trim suffixOverrides=",">
			<if test="id != null">
				id = #{id,jdbcType=INTEGER},
			</if>
			<if test="scenesId != null">
				scenes_id = #{scenesId,jdbcType=INTEGER},
			</if>
			<if test="expression != null">
				expression = #{expression,jdbcType=VARCHAR},
			</if>
			<if test="comparisonValue != null">
				comparison_value = #{comparisonValue,jdbcType=VARCHAR},
			</if>
			<if test="operator != null">
				`operator` = #{operator,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
</mapper>